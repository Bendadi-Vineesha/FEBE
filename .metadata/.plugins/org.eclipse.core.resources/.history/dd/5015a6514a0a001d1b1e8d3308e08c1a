package com.cts.usecaseproject.Controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import com.cts.usecaseproject.Model.Book;
import com.cts.usecaseproject.Service.AuthorService;

@RestController
@RequestMapping("/api")
public class BookController {
	
	//catergory,author,price,publisher

	@Autowired
	AuthorService service;

	@PostMapping("/create")
	public Book CreateBook(@RequestBody Book authordettails) {
		return service.saveOrUpdate(authordettails);
	}

	@DeleteMapping("/{id}")
	public String DeleteBook(@PathVariable int id) {
		service.delete(id);
		return "deleted succesfully";
	}
	
//	@GetMapping("/a/{name}")
//	public ResponseEntity<List<Book>> getBookByAuthorName(@PathVariable String name) {
//		List<Book> ra = service.getByAuthor(name);
//		return ResponseEntity.ok().body(ra);
//	}
	
	@GetMapping("/books/{price}")
	public ResponseEntity<List<Book>> getBookByPrice(@PathVariable int price) {
		List<Book> rp = service.getByPrice(price);
		return ResponseEntity.ok().body(rp);
	}

	
	@GetMapping("/author")
	public ResponseEntity<List<Book>> getBookByAuthor(@RequestParam(name = "authorname") String name) {
		List<Book> ra = service.getByAuthor(name);
		return ResponseEntity.ok().body(ra);
	}
	
	@GetMapping("/publisher")
	public ResponseEntity<List<Book>> getBookByPublisher(@RequestParam(name = "publisher") String publisher ) {
		List<Book> ra = service.getByPublisher(publisher);
		return ResponseEntity.ok().body(ra);
	}
	
	@GetMapping("/category")
	public ResponseEntity<List<Book>> getBookByCategory(@RequestParam(name = "category") String category) {
		List<Book> ra = service.getByCategory(category);
		return ResponseEntity.ok().body(ra);
	}
}


