package com.cts.usecaseproject.Controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.cts.usecaseproject.Model.Author;
import com.cts.usecaseproject.Service.AuthorService;

@RestController
@RequestMapping("/api")
public class AuthorController {

	@Autowired
	AuthorService service;

	@PostMapping("/create")
	public Author CreateBook(@RequestBody Author authordettails) {
		return service.saveOrUpdate(authordettails);
	}

	@DeleteMapping("/{id}")
	public String DeleteBook(@PathVariable int id) {
		service.delete(id);
		return "deleted succesfully";
	}
	
	@GetMapping("/author/{author}")
	public ResponseEntity<List<Author>> getBookByAuthorName(@PathVariable String name) {
		List<Author> ra = service.getByAuthor(name);
		return ResponseEntity.ok().body(ra);
	}
	
//	@GetMapping("/books/{price}")
//	public ResponseEntity<List<Author>> getBookByPrice(@RequestParam(name = "price") int price) {
//		List<Author> rp = service.getByPrice(price);
//		return ResponseEntity.ok().body(rp);
//	}

	//@GetMapping("/books/author/{author}")
	@GetMapping("/author")
	public ResponseEntity<List<Author>> getBookByAuthor(@RequestParam(name = "authorname") String name) {
		List<Author> ra = service.getByAuthor(name);
		return ResponseEntity.ok().body(ra);
	}
//	
//	@GetMapping("/books/{publisher}")
//	public ResponseEntity<List<Author>> getBookByPublisher(@RequestParam(name = "publisher") String publisher ) {
//		List<Author> ra = service.getByPublisher(publisher);
//		return ResponseEntity.ok().body(ra);
//	}
//	
//	@GetMapping("/books/{category}")
//	public ResponseEntity<List<Author>> getBookByCategory(@RequestParam(name = "category") String category) {
//		List<Author> ra = service.getByCategory(category);
//		return ResponseEntity.ok().body(ra);
//	}
}


